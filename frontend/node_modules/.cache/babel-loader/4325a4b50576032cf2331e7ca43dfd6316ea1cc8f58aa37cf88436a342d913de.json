{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const URL = process.env.REACT_APP_API_URL;\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(`${URL}/api/user/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      localStorage.setItem('user', JSON.stringify(json));\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"fHIX0I4YBKt6NrfIBVXrSg0BHV8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","URL","process","env","REACT_APP_API_URL","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/judel/Project Repositories/fullstack-todo-list/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState} from 'react'\r\nimport {useAuthContext} from './useAuthContext'\r\n\r\nexport const useSignup = () => {\r\n    const URL = process.env.REACT_APP_API_URL\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(null)\r\n    const { dispatch} = useAuthContext()\r\n    const signup = async (email, password) => {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch(`${URL}/api/user/signup`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({email,password})\r\n        })\r\n        const json = await response.json()\r\n\r\n        if (!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        } \r\n        if (response.ok) {\r\n            localStorage.setItem('user',JSON.stringify(json))\r\n            dispatch({type: 'LOGIN', payload: json})\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n    return {signup, isLoading, error}\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAO,OAAO;AAC/B,SAAQC,cAAc,QAAO,kBAAkB;AAE/C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEY;EAAQ,CAAC,GAAGX,cAAc,CAAC,CAAC;EACpC,MAAMY,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGb,GAAG,kBAAkB,EAAE;MACnDc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAACC;MAAQ,CAAC;IACzC,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACbb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IACA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MACjDX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MACxCZ,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EACD,OAAO;IAACE,MAAM;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACrC,CAAC;AAAAL,EAAA,CA3BYD,SAAS;EAAA,QAIED,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}