{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judel\\\\Project Repositories\\\\fullstack-todo-list\\\\frontend\\\\src\\\\components\\\\Task.jsx\",\n  _s = $RefreshSig$();\nimport { useTasksContext } from '../hooks/useTasksContext';\nimport { useState, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  task\n}) => {\n  _s();\n  const URL = process.env.REACT_APP_API_URL;\n  const {\n    dispatch\n  } = useTasksContext();\n  const [completed, setCompleted] = useState(task.completed);\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    setCompleted(task.completed);\n  }, [task.completed]);\n  const handleDelete = async () => {\n    if (!user) {\n      return;\n    }\n    const response = await fetch(`${URL}/api/tasks/` + task._id, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: 'DELETE_TASK',\n        payload: json\n      });\n    }\n  };\n  const handleCheck = async () => {\n    const newTask = task;\n    if (newTask.completed === true) {\n      newTask.completed = false;\n      console.log(\"now false\");\n    } else if (newTask.completed === false) {\n      newTask.completed = true;\n      console.log(\"now true\");\n    }\n    const response = await fetch(`${URL}/api/tasks/` + task._id, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify(newTask)\n    });\n    const json = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: json\n      });\n      //setCompleted(newTask.completed)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: completed,\n      onChange: handleCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"material-symbols-outlined\",\n      onClick: handleDelete,\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"vPwY0iaT/6nhZjWyBY3f5IIXh2A=\", false, function () {\n  return [useTasksContext, useAuthContext];\n});\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["useTasksContext","useState","useEffect","useAuthContext","jsxDEV","_jsxDEV","Task","task","_s","URL","process","env","REACT_APP_API_URL","dispatch","completed","setCompleted","user","handleDelete","response","fetch","_id","method","headers","token","json","ok","type","payload","handleCheck","newTask","console","log","body","JSON","stringify","className","children","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/judel/Project Repositories/fullstack-todo-list/frontend/src/components/Task.jsx"],"sourcesContent":["import { useTasksContext } from '../hooks/useTasksContext'\r\nimport { useState, useEffect } from 'react'\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\nconst Task = ({ task }) => {\r\n    const URL = process.env.REACT_APP_API_URL\r\n    const { dispatch } = useTasksContext()\r\n    const [completed, setCompleted] = useState(task.completed)\r\n    const { user } = useAuthContext()\r\n    useEffect(() => { setCompleted(task.completed); }, [task.completed])\r\n    const handleDelete = async () => {\r\n        if (!user) {\r\n            return\r\n        }\r\n        const response = await fetch(`${URL}/api/tasks/` + task._id, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        })\r\n        const json = await response.json()\r\n        if (response.ok) {\r\n            dispatch({ type: 'DELETE_TASK', payload: json })\r\n        }\r\n    }\r\n\r\n    const handleCheck = async () => {\r\n        const newTask = task\r\n        if (newTask.completed === true) {\r\n            newTask.completed = false\r\n            console.log(\"now false\")\r\n        } else if (newTask.completed === false) {\r\n            newTask.completed = true\r\n            console.log(\"now true\")\r\n        }\r\n        const response = await fetch(`${URL}/api/tasks/` + task._id, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            },\r\n            body: JSON.stringify(newTask)\r\n\r\n        })\r\n\r\n        const json = await response.json()\r\n        if (response.ok) {\r\n            dispatch({ type: 'UPDATE_TASK', payload: json })\r\n            //setCompleted(newTask.completed)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"task\">\r\n            <input type=\"checkbox\" checked={completed} onChange={handleCheck}></input>\r\n            <p>{task.description}</p>\r\n            <button className=\"material-symbols-outlined\" onClick={handleDelete}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}